name: CI
on:
  push:

jobs:
  build:
    runs-on: macos-latest

    strategy:
      matrix:
        spec:
        - { scheme: 'ZitiPacketTunnel', id_var: 'MAC_APP_IDENTIFIER', config: 'Release', sdk: 'macosx', destination: 'generic/platform=macOS', ext: 'app'}
        - { scheme: 'ZitiMobilePacketTunnel', id_var: 'IOS_APP_IDENTIFIER', config: 'Release', sdk: 'iphoneos', destination: 'generic/platform=iOS', ext: 'ipa'}

    steps:
        - uses: actions/checkout@v3

        - uses: maxim-lobanov/setup-xcode@v1
          with:
            xcode-version: '14.2'

        - name: Store XCConfig
          id: store_xcconfig
          run: |
            xcconfig_fn="./Configs/workspace-settings-overrides.xcconfig"
            echo ${{ secrets.XCCONFIG }} | base64 --decode > ${xcconfig_fn}
            id_var=${{ matrix.spec.id_var }}
            line=$(cat ${xcconfig_fn} | grep ${id_var}) && app_identifier=$(echo ${line##* })
            echo "app_identifier=${app_identifier}" >> GITHUB_OUTPUT

        - name: Setup Keychain
          run: |
            echo "${{ secrets.APPLE_DEVELOPMENT_P12 }}" | base64 --decode > ./development.p12
            echo "${{ secrets.APPLE_DEVELOPMENT_P12_PASSWORD }}" > ./development.pass
            PASS=$(cat ./development.pass | base64 --decode)
            security create-keychain -p paswsword build.keychain
            security default-keychain -s build.keychain
            security unlock-keychain -p paswsword build.keychain
            security import ./development.p12 -k build.keychain -P ${PASS} -A -t cert -f pkcs12
            security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k paswsword build.keychain

        - run: |
            mkdir ./artifacts
            echo ${GITHUB_RUN_NUMBER}

        - name: Store API Key
          id: store_api_key
          env:
            AUTH_KEY: ${{ secrets.APPLE_DEVELOPER_KEY }}
            AUTH_KEY_ID: ${{ secrets.APPLE_DEVELOPER_KEY_ID }}
          run: |
            key_dir="${PWD}/.appstoreconnect/private_key"
            mkdir -p ${key_dir}
            key_fn="${key_dir}/AuthKey_${AUTH_KEY_ID}.p8"
            echo "Storing ${key_fn}"
            echo ${AUTH_KEY} | base64 --decode > ${key_fn}
            echo "api_key_fn=${key_fn}" >> $GITHUB_OUTPUT

        - name: Get App Info
          id: get_app_info
          env:
            AUTH_KEY_ID: ${{ secrets.APPLE_DEVELOPER_KEY_ID }}
            AUTH_KEY_ISSUER_ID: ${{ secrets.APPLE_DEVELOPER_KEY_ISSUER_ID }}
          run: |
            all_app_info=$(xcrun altool --list-apps --apiKey ${AUTH_KEY_ID} --apiIssuer ${AUTH_KEY_ISSUER_ID} --output-format json)
            app_info=$(echo ${all_app_info} | jq ".applications[] | select(.ReservedBundleIdentifier | contains(${{ steps.store_xcconfig.outputs.app_identifier }}))")
            echo "APP INFO for ${{ steps.store_xcconfig.outputs.app_identifier }}: ${app_info}"
            echo "app_info=${app_info}" >> $GITHUB_OUTPUT

        - name: Archive ${{ matrix.spec.scheme }}
          env:
            SCHEME: ${{ matrix.spec.scheme }}
            CONFIG: ${{ matrix.spec.config }}
            SDK: ${{ matrix.spec.sdk }}
            DESTINATION: ${{ matrix.spec.destination }}
            AUTH_KEY_ID: ${{ secrets.APPLE_DEVELOPER_KEY_ID }}
            AUTH_KEY_ISSUER_ID: ${{ secrets.APPLE_DEVELOPER_KEY_ISSUER_ID }}
          run: |
            xcodebuild archive -allowProvisioningUpdates \
              -authenticationKeyPath ${{ steps.store_api_key.api_key_fn }} \
              -authenticationKeyID ${AUTH_KEY_ID} -authenticationKeyIssuerID ${AUTH_KEY_ISSUER_ID} \
              -configuration ${CONFIG} -scheme ${SCHEME} -sdk ${SDK} -destination ${DESTINATION} \
              -archivePath ./artifacts/${SCHEME}
            ls -la ./artifacts

        - name: Export ${{ matrix.spec.scheme }}
          env:
            SCHEME: ${{ matrix.spec.scheme }}
            EXT: ${{ matrix.spec.ext }}
            AUTH_KEY_ID: ${{ secrets.APPLE_DEVELOPER_KEY_ID }}
            AUTH_KEY_ISSUER_ID: ${{ secrets.APPLE_DEVELOPER_KEY_ISSUER_ID }}
          run: |
            xcodebuild -allowProvisioningUpdates \
              -authenticationKeyPath ${{ steps.store_api_key.api_key_fn }} \
              -authenticationKeyID ${AUTH_KEY_ID} -authenticationKeyIssuerID ${AUTH_KEY_ISSUER_ID} \
              -exportArchive -exportPath ./artifacts/${SCHEME}.${EXT} \
              -exportOptionsPlist ./etc/exportOptionsRelease.plist \
              -archivePath ./artifacts/${SCHEME}.xcarchive 
            ls -la ./artifacts

        - name: Cleanup Keychain
          if: always()
          run: |
            rm -f ${{ steps.store_api_key.api_key_fn }}
            rm -f ./development.p12
            rm -f ./development.pass
            security default-keychain -s "login.keychain"
            security delete-keychain build.keychain
